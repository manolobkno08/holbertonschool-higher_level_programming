=======================
|  Test Div Matrix  |
=======================

``2-matrix_divided()`` Return a division by each one of the index values

Importing the function from the module:
	>>> matrix_divided = __import__("2-matrix_divided").matrix_divided

Checking for module docstring:
	>>> m = __import__("2-matrix_divided").__doc__
	>>> len(m) > 1
	True

Checking for function docstring:
	>>> f = __import__("2-matrix_divided").matrix_divided.__doc__
    >>> len(f) > 1
	True

::

	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
    >>> matrix = [[1, 2, 3],[4, 5, 6]]
	>>> matrix_divided(matrix, 3)
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

It also works with floating-point  and negatives values into the matrix.

::
	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
    >>> matrix = [[1.2, 2.4, 3.5],[4.3, 5.6, 6.9]]
	>>> matrix_divided(matrix, 3)
	[[0.4, 0.8, 1.17], [1.43, 1.87, 2.3]]

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided
    >>> matrix = [[1.2, 2.4, 3.5],[4.3, 5.6, 6.9]]
	>>> matrix_divided(matrix, 3.5)
	[[0.34, 0.69, 1.0], [1.23, 1.6, 1.97]]

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided
    >>> matrix = [[-1, -2.4, 3.9],[4, 5, -6.3]]
	>>> matrix_divided(matrix, 3)
	[[-0.33, -0.8, 1.3], [1.33, 1.67, -2.1]]

The program raised errors when are necessary.

::
	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
	Traceback (most recent call last):
	ZeroDivisionError: division by zero

	>>> matrix_divided([[1, 2, 3], [4, "str", 6]], 3)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats
